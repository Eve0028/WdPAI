@use 'variables' as v;

// for media-query
/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints

@mixin respond-to($breakpoint) {
  @if map-has-key(v.$breakpoints, $breakpoint) {
    @media (max-width: #{map-get(v.$breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

/*
.element {
  color: hotpink;

  @include respond-to(small) {
    color: tomato;
  }
}
 */

// inputs
@mixin inputs_style {
  background-color: #efefef;
  color: v.$font-input-color;
  border: 2px solid #ddd;
  border-radius: 5px;
  font-size: 1.2em;
  padding: 0.6em;
  box-sizing: border-box;
  outline: none;
  margin-top: 0.4em;
  margin-bottom: 0.6em;

  &:focus {
    -webkit-box-shadow: 0 0 10px 2px rgba(204, 204, 204, 0.9);
    -moz-box-shadow: 0 0 10px 2px rgba(204, 204, 204, 0.9);
    box-shadow: 0 0 10px 2px rgba(204, 204, 204, 0.9);
    border: 2px solid #a5cda5;
    background-color: #e9f3e9;
    color: v.$font-input-hover-color;
  }
}

// buttons
@mixin buttons_style {
  background-color: v.$primary-color;
  font-size: 1.2em;
  color: white;
  padding: 0.7em;
  margin-top: 0.6em;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  letter-spacing: 1px;
  outline: none;

  &:focus {
    -webkit-box-shadow: 0 0 15px 5px rgba(204, 204, 204, 0.9);
    -moz-box-shadow: 0 0 15px 5px rgba(204, 204, 204, 0.9);
    box-shadow: 0 0 15px 5px rgba(204, 204, 204, 0.9);
  }

  &:hover {
    background-color: v.$primary-hover-color;
  }
}

@mixin links_style {
  &:link {
    color: grey;
    text-decoration: none;
  }
  &:visited {
    color: grey;
  }
  &:active {
    color: grey;
  }
  &:hover {
    color: v.$primary-color;
    text-decoration: underline;
  }
}

